var express = require('express');
var router = express.Router();
var mongoose = require("mongoose");
var User = mongoose.model("User");
var errors = require("../common/errors");
var redisClient = require("../common/redisClient");
var redisPrefix = require("../common/redisPrefix");
var vipConfig = require("../common/vipConfig");
var config = require("../common/config");
var wxPay = require("../common/wxPay");
var functions = require("../common/functions");


/**
 * 刷新用户信息
 * onLunch时调用
 */
router.get('/refreshuser', function (req, res, next) {
	var user = req.$wxUserInfo;

	User.findOne({openId:user.openId},function (err, docs) {
		if(!err){
			/*刷新缓存*/
			redisClient.set(redisPrefix+user.openId,docs);
			redisClient.expire(redisPrefix+user.openId, 86400);

			if (docs){              //有此用户,则更新
				User.update({openId:user.openId},user,function (err1, docs1) {
					if(!err1){
						res.status(200).json(errors.error0);
					}else {
						res.status(200).json(errors.error3);
					}
				})
			}else {                 //无此用户,则添加
				var newUser = new User({
					nickName:req.$wxUserInfo.nickName,                                //姓名
					gender:req.$wxUserInfo.gender,                                  //性别
					language:req.$wxUserInfo.language,                                //语言
					city:req.$wxUserInfo.city,                                    //城市
					country:req.$wxUserInfo.country,                                 //国家
					avatarUrl:req.$wxUserInfo.avatarUrl,                               //头像
					openId:req.$wxUserInfo.openId,                                  //openid
					money:0,                                   //我的零钱（元）
					vipLevel:0,
					expireTime:0,
					createTime:Date.now(),                              //创建时间
				});
				newUser.save(function (err2, docs2) {
					if (!err2){
						res.status(200).json(errors.error0);
					}else {
						res.status(200).json(errors.error3);
					}
				});
			}
		}else {
			res.status(200).json(errors.error3);
		}
	});
});

/**
 * 获取当前用户(我的)权限
 */
router.get("/getmyauthority",function (req, res,next) {

});

/**
 * 会员中心首页
 */
router.get("/myhome",function (req, res, next) {
	var openId = req.$wxUserInfo.openId;

	User.findOne({openId:openId},function (err,docs) {
		if(err){
			res.status(200).json(errors.error3);
		}else{
			res.status(200).json({
				error:0,
				message:'success',
				data:docs,
			});
		}
	})
});

/**
 * 会员收费简介
 */
router.get("/vipprice/:level",function (req, res, next) {
	var level = req.params.level;
	var ret = functions.getVipLevelPrice(level);
	res.status(200).json({
		error:0,
		message:"success",
		data:ret,
	})
});

/**
 * 创建支付订单
 */
router.post("/createorder",function (req, res, next){
	var level = req.body.level;               //1-3
	var timeLength = req.body.timeLength;        //0-5
	var orderNo = req.body.orderNo;

	var attach = config.appName;
	var body;

	var vipData = functions.getVipLevelPrice(level);
	switch (level){
		case '1':
			body = config.appName + " - " + vipConfig.authority.vip0.name;
			break;
		case '2':
			body = config.appName + " - " + vipConfig.authority.vip1.name;
			break;
		case '3':
			body = config.appName + " - " + vipConfig.authority.vip2.name;
			break;
	}

	switch (timeLength){
		case '0':
			body = body + " (1个月)";
			break;
		case '1':
			body = body + " (3个月)";
			break;
		case '2':
			body = body + " (6个月)";
			break;
		case '3':
			body = body + " (1年)";
			break;
		case '4':
			body = body + " (2年)";
			break;
		case '5':
			body = body + " (3年)";
			break;
	}

	var mch_id = config.weappConfig.mchId;
	var openid = req.$wxUserInfo.openId;
	var total_fee  = vipData.price[timeLength] * 100;
	total_fee = 1;
	var notify_url = config.siteUrl + '/1.0/service/notify'; //通知地址
	var ip = req.ip;
	console.log("金额：" + total_fee);
	wxPay.order(attach, body, mch_id, openid, orderNo, total_fee, notify_url,ip).then(function(data){
		console.log("=========");
		console.log(data);
		res.status(200).json({
			error:0,
			message:'success',
			data:data,
		});
	});
})

router.get("/test",function (req, res, next) {
	User.find({},function (err,docs) {
		res.json(docs);
	})
});

router.get("/test1",function (req, res, next) {

});

module.exports = router;
