var express = require('express');
var router = express.Router();
var mongoose = require("mongoose");
var Flock = mongoose.model("Flock");
var Album = mongoose.model("Album");
var FlockUser = mongoose.model("FlockUser");
var FlockAlbum = mongoose.model("FlockAlbum");
var PatchPhoto = mongoose.model("PatchPhoto");
var Photo = mongoose.model("Photo");
var flockHeadPic = require('../common/flockHeadPic');
var redisClient = require("../common/redisClient");
var redisPrefix = require("../common/redisPrefix");
var errors = require("../common/errors");
var functions = require("../common/functions");

/**
 *  创建群图集
 *  */
router.post('/createflock', function (req, res, next) {
	var name = req.body.name;
	var imgIndex = req.body.index;
	var imgUrl = req.body.filePath;
	var flock = new Flock({
		flockName:name,                              //群相册名称
		flockPicIndex:imgIndex,                                //群头像序号,默认为0,以此递增.若为-1,则表示自定义头像(未来添加)
		flockPicUrl:imgUrl,                                //群头像
		creatorOpenId:req.$wxUserInfo.openId,                           //创建者openid
		creatorName:req.$wxUserInfo.nickName,                           //创建者昵称
		creatorHeadPic:req.$wxUserInfo.avatarUrl,                          //创建者头像
		followerNum:0,                             //人气数,默认为0
		photoNum:0,                                //总照片数
		openGId:'',                                //群Id
		linkAlbumNum:0,                            //所包含的联动相册数量
		updateTime:Date.now(),                              //更新时间，上传/删除照片后，会更新此字段
		createTime:Date.now(),                     //创建时间
	});
	flock.save(function (err, data) {
		if(err){
			res.status(200).json(errors.error3);
		}else{
			res.status(200).json({
				error:0,
				message:'success',
				data:data,
			});
		}
	})
});

/**
 *  获取群头像列表
 *  */
router.get('/getflockheadpic', function (req, res, next) {
	res.status(200).json({
		error:0,
		message:'success',
		data:flockHeadPic,
	});
});


/**
 * 用户先创建群组,然后关联群场景
 */
router.post("/checkandlinkgroup",function (req,res,next) {
	var flockId = req.body.flockId;
	var encryptedData = req.body.encryptedData;
	var iv = req.body.iv;

	redisClient.get(redisPrefix.WX_SESSION_KEY+req.$wxUserInfo.openId,function (e,v) {
		if(!v){
			res.status(200).json(errors.error5);
		}else{
			var data = functions.wxDecrypt(encryptedData,iv,v);
			/**
			 * data的数据格式为:
			 * { openGId: 'Gcwf90DevFB_kQCPxbMEpSp3Jzec',
		 * watermark: { timestamp: 1495096469, appid: 'wxedfda50b98a601f2' } }
			 * */
			if (data.openGId){
				//console.log("分享到群里了");
				var openGId = data.openGId;
				Flock.findOne({openGId:openGId},function (e, v) {//查看该群的图集有没有被创建
					if (e){
						res.status(200).json(errors.error3);
					}else {
						if(v){//该群已创建图集
							functions.linkUserAndFlock(req.$wxUserInfo.openId,openGId);
							res.status(200).json(errors.error10001);
						}else {//关联图集和群
							/*console.log("++++++++++++++++++++++++++++++++");
							console.log("++++++++++++++++++++++++++++++++");
							console.log(flockId);
							console.log(req.$wxUserInfo.openId);
							console.log(openGId);*/
							Flock.findOneAndUpdate({_id:mongoose.Types.ObjectId(flockId),creatorOpenId:req.$wxUserInfo.openId}, { $set: { openGId: openGId }},{sort:{updateTime:-1}}, function (err, ret) {
								if (err){
									res.status(200).json(errors.error3);
								}else {
									functions.linkUserAndFlock(req.$wxUserInfo.openId,openGId);
									//console.log(ret);
									res.status(200).json(errors.error0);
								}
							});
						}
					}
				});
			}else {
				//console.log("未分享到群里了");
				res.status(200).json(errors.error10002);
			}
		}

	});
});

/**
 * 用户点击分享到群里的卡片,然后关联群场景
 */
router.post("/joinflock",function (req, res, next) {
	var sourceOpenGId = req.body.sourceOpenGId;
	var encryptedData = req.body.encryptedData;
	var iv = req.body.iv;

	redisClient.get(redisPrefix.WX_SESSION_KEY+req.$wxUserInfo.openId,function (e,v) {
		if(e || !v){
			res.status(200).json(errors.error5);
		}else{
			var data = functions.wxDecrypt(encryptedData,iv,v);
			/**
			 * data的数据格式为:
			 * { openGId: 'Gcwf90DevFB_kQCPxbMEpSp3Jzec',
		     * watermark: { timestamp: 1495096469, appid: 'wxedfda50b98a601f2' } }
			 * */
			if (data.openGId){
				var openGId = data.openGId;
				req.body.targetOpenGId = openGId;

				//判断目标群有没有建相册,建了则关联用户,没建,则提示建设
				functions.getFlockInfoByOpenGId(req.body.targetOpenGId, function (e,flockInfo) {
					flockInfo  = JSON.parse(flockInfo);
					if(!e){
						if (flockInfo){//建了
							functions.linkUserAndFlock(req.$wxUserInfo.openId,openGId);
							res.status(200).json({
								error:0,
								message:'success',
								data:{
									isBuilt:1,
									flockInfo:flockInfo,
								}
							});
						}else{//没建
							res.status(200).json({
								error:0,
								message:'success',
								data:{
									isBuilt:0,
									flockInfo:null,
								}
							});
						}
					}
				});
			}
		}

	});
});


/**
 * 我的群组列表
 * 个人首页
 */
router.get("/myflocklist/:openId",function (req, res, next) {
	var openId = req.params.openId;
	FlockUser.find({openId:openId}, function (err, data) {//查询出我的群id列表
		if(err){
			res.status(200).json(errors.error3);
		} else {
			var ids = [];
			for(var i=0; i<data.length;i++){
				ids.push(data[i].openGId);
			}

			Flock.find({openGId:{$in:ids}}).sort({updateTime:-1}).skip(0).limit(10).exec(function (err1,data1) {//查询出群详细信息
				if (err1){
					res.status(200).json(errors.error3);
				} else {
					var ret = {
						error:0,
						message:"success",
						data:{
							flocks:data1,
							user:req.$wxUserInfo,
						}
					};
					res.status(200).json(ret);
					//console.log(data1);
				}
			});
		}
	});
});

/**
 * 查看更多群组信息
 */
router.get("/flocklistmore/:page",function (req, res, next) {
	var page = req.params.page;
	var openId = req.$wxUserInfo.openId;
	var start = (parseInt(page) - 1) * 10;
	Flock.find({openId:openId}).sort({createTime:-1}).skip(start).limit(10).exec(function(err1,docs1){
		if (err1){
			res.status(200).json(errors.error3);
		} else {
			var ret = {
				error:0,
				message:"success",
				data:{
					flocks:data1,
				}
			};
			res.status(200).json(ret);
			//console.log(data1);
		}
	});
});

/**
 * 获取群组的更多动态
 */
router.get("/getdynimics/:openGId/:page",function (req, res,next) {
	var openGId = req.params.openGId;
	var page = req.params.page;

	Flock.findOne({openGId:openGId},function (err, flock) {
		if (!err){
			if(flock){
				//查询和本群相关的相册
				FlockAlbum.find({flockId:flock._id},function (err1, docs1) {
					if (!err1 && docs1){
						var ids = [];
						var albumIds = [];
						for(var i=0; i<docs1.length;i++){
							ids.push(mongoose.Types.ObjectId(docs1[i].albumId));
							albumIds.push(docs1[i].albumId);
						}
						var start = (parseInt(page) - 1) * 10;
						/*获取新的10条动态*/
						PatchPhoto.find({albumId:{$in:albumIds},isShow:1}).sort({'createTime':-1}).skip(start).limit(10).exec(function(err3,docs3){
							if (!err3 && docs3){
								var isFinish = 0;
								if (docs3.length < 10){
									isFinish =1;
								}
								res.status(200).json({
									error:0,
									message:"success",
									data:{
										isFinish:isFinish,
										dynimics:docs3,
									}
								});
							}else {
								res.status(200).json(errors.error3);
							}
						});
					}else {
						res.status(200).json(errors.error3);
					}
				});
			}else {
				res.status(200).json(errors.error8);
			}
		}else {
			res.status(200).json(errors.error3);
		}
	});
});



/**
 * 获取群详细信息
 */
router.get("/flockinfo/:openGId/:openId",function (req, res, next) {
	var openId = req.params.openId;
	var openGId = req.params.openGId;


	if (openId == req.$wxUserInfo.openId){
		functions.getFlockInfoByOpenGId(openGId,function (err,flockInfo) {
			res.status(200).json({
				error:0,
				message:"success",
				data:JSON.parse(flockInfo),
			});
		});
		//人气加1
		Flock.update({openGId:openGId},{$inc: {followerNum: 1}},function(){});
	}else{
		res.status(200).json(errors.error8);
	}
});

/**
 * 修改群图集名称,头像
 */
router.post("/editflock",function (req, res, next) {
	var openGId = req.body.openGId;
	var creatorOpenId = req.body.creatorOpenId;
	var name = req.body.name;
	var imgIndex = req.body.index;
	var imgUrl = req.body.filePath;

	if (creatorOpenId == req.$wxUserInfo.openId){
		var data = {
			flockName:name,                              //群相册名称
			flockPicIndex:imgIndex,                      //群头像序号,默认为0,以此递增.若为-1,则表示自定义头像(未来添加)
			flockPicUrl:imgUrl,                          //群头像
		};
		Flock.update({openGId:openGId},data,function (err,ret) {
			if(err){
				res.status(200).json(errors.error3);
			}else {
				//刷新群缓存
				functions.buildFlockInfoCache(openGId,function (e,v) {});
				res.status(200).json(errors.error0);
			}
		});
	}else{
		res.status(200).json(errors.error8);
	}
});

/**
 * 查看群全部相册
 */
router.get("/allalbums/:openGId/:openId",function(req, res, next){
	if (req.params.openId == req.$wxUserInfo.openId){
		FlockAlbum.find({openGId:req.params.openGId},function (err, data) {
			//console.log(data);
			if(err){
				res.status(200).json(errors.error3);
			} else {
				var ids = [];
				for (var i=0; i<data.length;i++){
					ids.push(mongoose.Types.ObjectId(data[i].albumId));
				}
				Album.find({_id:{$in:ids},isShow:1},function (err1,data1) {
					//console.log(data1);
					if(err1){
						res.status(200).json(errors.error3);
					} else {
						res.status(200).json({
							error:0,
							message:"success",
							data:data1,
						});
					}
				})
			}
		})
	} else {
		res.status(200).json(errors.error8);
	}
});

/**
 * 群添加相册
 */
router.post("/addflockalbum",function (req, res, next) {
	/*console.log("hahah");
	console.log(req.body.price);*/
	var openGId = req.body.openGId;
	var openId = req.body.openId;
	var name = req.body.name;
	var description = req.body.description;
	var price = (parseFloat(req.body.price)).toFixed(2);
	//console.log(price);
	if (openId == req.$wxUserInfo.openId){
		var album = new Album({
			coverPic:'',                                //封面图片
			creatorOpenId:req.$wxUserInfo.openId,                           //创建者openid
			creatorName:req.$wxUserInfo.nickName,                             //创建者昵称
			creatorHeadPic:req.$wxUserInfo.avatarUrl,                          //创建者头像
			albumName:name,                               //相册名称
			albumDescription:description,                        //相册描述
			isLinkAlbum:0,                             //是否是联动相册.0不是,是群相册;1是
			price:price,                                   //价格（元）
			photoNum:0,                                //照片数量,默认为0
			isShow:1,
			createTime:Date.now(),                              //创建时间
			updateTime:Date.now(),                              //更新时间
		});
		album.save(function (err, data) {
			if(err){
				res.status(200).json(errors.error3);
			}else {
				//关联群与相册
				var fa = new FlockAlbum({
					openGId:openGId,                                 //群的openId
					albumId:data._id,                                 //相册objectId
					createTime:Date.now(),                              //关联时间
				});
				fa.save(function(err1,data1){});
				res.status(200).json({
					error:0,
					message:'success',
					data:data,
				})
			}
		})
	}else {
		res.status(200).json(errors.error8);
	}
});

/**
 * 获得我创建的相册列表和收费为0的相册列表
 */
router.get("/myflockalbums/:openGId",function (req, res, next) {
	var openId = req.$wxUserInfo.openId;
	var openGId = req.params.openGId;

	FlockAlbum.find({openGId:openGId},function (err, data) {
		if(err){
			res.status(200).json(errors.error3);
		}else {
			var ids = [];
			for (var i=0; i<data.length;i++){
				ids.push(mongoose.Types.ObjectId(data[i].albumId));
			}
			//查询出由本人创建或相册收费为0的相册
			Album.find({$or:[{_id:{$in:ids},creatorOpenId:openId},{_id:{$in:ids},price:0}],isShow:1},function (err1,data1) {
				if (err1){
					res.status(200).json(errors.error3);
				}else {
					res.status(200).json({
						error:0,
						message:'success',
						data:data1,
					})
				}
			})
		}
	})
});


module.exports = router;
